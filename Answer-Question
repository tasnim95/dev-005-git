پاسخ سوال یک:گیت به منظور حل مشکل نگهداری کد ایجاد شده است و به جای استفاده از فلش و هارد از در گذشته و پس از آن استفاده از سیستم های version control که ایراداتی داشتند سیستم کنترل گیت  طراحی شد که توسعه و نگهداری کد را ساده تر کرده است.
پاسخ سوال دو: : Repository یک فضای ذخیره‌سازی است که کدها را نگه‌داری می‌کند و هم‌زمان بخش کنترل ورژن آن، تمام نسخه‌های مشخص‌شده از آن کد را حفظ می‌کند، فایل README.md ، فایل  LICENCE، gitignore
پاسخ سوال  سه: فایل README از سه بخش تشکیل شده اند دو بخش الزامی یک بخش اختیاری بخش اول: توضیحاتی در مورد آن git و repository که برای چه است و چه محتوایی داخل آن است بخش دوم: نحوه استفاده یا get started است بخش سوم(اختیاری): اگر کسی بخواهد contribute کند چه شرایطی دارد.
پاسخ سوال  چهار: اگر بخواهیم یک کپی از Repository موجود روی سیستم خودمان ایجاد کنیم و روی آن تغییرات ایجاد کنیم از git clone استفاده می کنیم
پاسخ سوال  پنج: git push
پاسخ سوال  شش: git revert: commit ها را پاک نمی کند یک commit جدید را اضافه می کند و timeline پروژه را به هم
نمی ریزد.  reset commit  ها را پاک می کند ولی کدها را پاک نمی کند. به طور سطحی، git reset در رفتار مشابه 
git checkout است. در حالی که git checkout تنها روی اشاره گر HEAD کار می کند، git reset با اشاره گر HEAD و اشاره گر شاخه ی جاری کار می کند.
پاسخ سوال  هفت: merge کردن باعث می شود که تغییراتی که در branch feature اعمال کرده بودیم در ادامه master اضافه
 شود در این حالت هر چقدر هم commit داشته باشیم بعد از merge، master یک commit merge می بیند.
rebase کردن باعث می شود تغییرات یکی یکی به master branch وارد شود و commit merge نمی بینیم و هر آنچه 
درfeature  اضافه کردیم و commit ها را به  commitهای جاری master  می برد و بر اساس زمان ثبت مرتب و قابل مشاهده 
است .
پاسخ سوال  هشت:  git log
پاسخ سوال  نه: git status
پاسخ سوال  ده: از tag برای مشخص کردن نقطه خاصی در تاریخ Git استفاده می شود که برای انتشار نسخه های خاص و ورژن های برنامه استفاده می شود به این صورت که یک   commit خاص و تمام parent هایش version x باشد.
git tag versionx
پاسخ سوال  یازده:ابتدا باید آن را fork کنند سپس با دستور با  git clone یک کپی از repository موجود به سیستم خودمان انتقال میدهیم
پاسخ سوال  دورازده: اگر یک repository داریم که تعدادی برنامه نویس می خواهند روی آن کار کنند نباید روی master 
branch کار کنند و آن را برای کدهای نهایی بگذارند وبرای افزودن فیچرها از branch های مختلف استفاده کنیم و درنهایت با دستور زیر آن را merge می کنیم
git merge barnach_name


